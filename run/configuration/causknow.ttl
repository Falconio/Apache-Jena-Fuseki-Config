# Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

@prefix : <#> .
@prefix fuseki: <http://jena.apache.org/fuseki#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tdb2:   <http://jena.apache.org/2016/tdb#> .
@prefix ja: <http://jena.hpl.hp.com/2005/11/Assembler#> .

[] rdf:type fuseki:Server ;
	fuseki:services (
	<#service1>
	) .

# Custom code.
[] ja:loadClass "org.apache.jena.tdb2.TDB2" .

# TDB2
tdb2:DatasetTDB2 rdfs:subClassOf ja:RDFDataset .
tdb2:GraphTDB rdfs:subClassOf ja:Model .

## ---------------------------------------------------------------
## Service with only SPARQL query on an inference model.
## Inference model bbase data in TDB2.

<#service1> rdf:type fuseki:Service ;
	fuseki:name "causknow" ; # Dataset name
	fuseki:serviceQuery "query", "sparql" ; # SPARQL query service
	fuseki:serviceUpdate "update" ;
	fuseki:serviceUpload "upload" ; # Non-SPARQL upload service
	fuseki:serviceReadWriteGraphStore "data" ; # SPARQL Graph store protocol (read and write)
	# A separate read-only graph store endpoint:
	fuseki:serviceReadGraphStore "get" ; # SPARQL Graph store protocol (read only)
	fuseki:dataset <#dataset> .

<#dataset> rdf:type ja:RDFDataset ;
	ja:defaultGraph <#model_inf> .

<#model_inf> a ja:InfModel ;
#	ja:baseModel <#tdbGraph> ;
#	ja:content <#test-inf> ; # Pizza Ontology testing file
	ja:reasoner [
#		ja:reasonerURL <http://jena.hpl.hp.com/2003/RDFSExptRuleReasoner>
		ja:reasonerClass "openllet.jena.PelletReasonerFactory" # Openllet reasoner 
	] .

<#tdbGraph> rdf:type tdb2:GraphTDB ;
	tdb2:dataset <#tdbDataset2> .

<#tdbDataset2> rdf:type tdb2:DatasetTDB2 ;
	tdb2:location "/PATH/TO/APACHE/JENA/FUSEKI/run/databases/causknow" ; # You must edit this line to set location of database
	# set the timeout for a SPARQL query in milliseconds. 0 means no timeout and the query never times out.
	ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "0" ] .

<#test-inf> ja:externalContent <file:///opt/pizza.owl> .